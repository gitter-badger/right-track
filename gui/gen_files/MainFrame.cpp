// -*- C++ -*- generated by wxGlade 0.6.3 on Wed May  4 18:54:19 2011

#include "MainFrame.h"

// begin wxGlade: ::extracode

// end wxGlade


MainFrame::MainFrame(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
    // begin wxGlade: MainFrame::MainFrame
    g_EventWindow = new EventCanvas(this, wxID_ANY);
    g_TotalEventCount = new wxStaticText(this, wxID_ANY, wxT("Total events: 0"));
    static_line_1 = new wxStaticLine(this, wxID_ANY);
    g_EventName = new wxStaticText(this, wxID_ANY, wxEmptyString);
    g_EventCount = new wxStaticText(this, wxID_ANY, wxEmptyString);
    g_EventData = new wxStaticText(this, wxID_ANY, wxEmptyString);
    frame_1_menubar = new wxMenuBar();
    wxMenu* FileMenu = new wxMenu();
    FileMenu->Append(FileOpen_id, wxT("Open"), wxEmptyString, wxITEM_NORMAL);
    FileMenu->Append(wxID_EXIT, wxT("Quit"), wxEmptyString, wxITEM_NORMAL);
    frame_1_menubar->Append(FileMenu, wxT("File"));
    wxMenu* ViewMenu = new wxMenu();
    ViewMenu->Append(wxID_ZOOM_IN, wxT("Zoom in"), wxEmptyString, wxITEM_NORMAL);
    ViewMenu->Append(wxID_ZOOM_OUT, wxT("Zoom out"), wxEmptyString, wxITEM_NORMAL);
    ViewMenu->Append(wxID_ZOOM_FIT, wxT("Zoom to fill window"), wxEmptyString, wxITEM_NORMAL);
    ViewMenu->Append(MenuRefresh_id, wxT("Refresh"), wxEmptyString, wxITEM_NORMAL);
    ViewMenu->Append(wxID_ANY, wxT("Event Names"), wxEmptyString, wxITEM_CHECK);
    frame_1_menubar->Append(ViewMenu, wxT("View"));
    wxMenu* ToolsMenu = new wxMenu();
    ToolsMenu->Append(ColorPicker_id, wxT("Color"), wxEmptyString, wxITEM_NORMAL);
    frame_1_menubar->Append(ToolsMenu, wxT("Tools"));
    wxMenu* HelpMenu = new wxMenu();
    HelpMenu->Append(wxID_ABOUT, wxT("About"), wxEmptyString, wxITEM_NORMAL);
    frame_1_menubar->Append(HelpMenu, wxT("Help"));
    SetMenuBar(frame_1_menubar);

    set_properties();
    do_layout();
    // end wxGlade
}


BEGIN_EVENT_TABLE(MainFrame, wxFrame)
    // begin wxGlade: MainFrame::event_table
    EVT_MENU(FileOpen_id, MainFrame::FileOpenHandler)
    EVT_MENU(wxID_EXIT, MainFrame::QuitHandler)
    EVT_MENU(wxID_ZOOM_IN, MainFrame::ZoomInHandler)
    EVT_MENU(wxID_ZOOM_OUT, MainFrame::ZoomOutHandler)
    EVT_MENU(wxID_ZOOM_FIT, MainFrame::ZoomFillHandler)
    EVT_MENU(MenuRefresh_id, MainFrame::RefreshHandler)
    EVT_MENU(ColorPicker_id, MainFrame::ColorPickerHandler)
    EVT_MENU(wxID_ABOUT, MainFrame::AboutHandler)
    // end wxGlade
END_EVENT_TABLE();


void MainFrame::FileOpenHandler(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (MainFrame::FileOpenHandler) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void MainFrame::QuitHandler(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (MainFrame::QuitHandler) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void MainFrame::ZoomInHandler(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (MainFrame::ZoomInHandler) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void MainFrame::ZoomOutHandler(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (MainFrame::ZoomOutHandler) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void MainFrame::ZoomFillHandler(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (MainFrame::ZoomFillHandler) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void MainFrame::RefreshHandler(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (MainFrame::RefreshHandler) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void MainFrame::ColorPickerHandler(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (MainFrame::ColorPickerHandler) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void MainFrame::AboutHandler(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (MainFrame::AboutHandler) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


// wxGlade: add MainFrame event handlers


void MainFrame::set_properties()
{
    // begin wxGlade: MainFrame::set_properties
    SetTitle(wxT("Right Track Event Viewer"));
    // end wxGlade
}


void MainFrame::do_layout()
{
    // begin wxGlade: MainFrame::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxVERTICAL);
    sizer_1->Add(g_EventWindow, 6, wxALL|wxEXPAND, 3);
    sizer_2->Add(g_TotalEventCount, 0, wxEXPAND, 0);
    sizer_2->Add(static_line_1, 0, wxEXPAND, 4);
    sizer_2->Add(g_EventName, 0, 0, 0);
    sizer_2->Add(g_EventCount, 0, 0, 0);
    sizer_2->Add(g_EventData, 0, 0, 0);
    sizer_1->Add(sizer_2, 1, wxEXPAND, 0);
    SetSizer(sizer_1);
    sizer_1->Fit(this);
    Layout();
    // end wxGlade
}

